package com.avnet.emasia.webquote.webservice.drmsagprea;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.4.6
 * 2013-12-06T15:00:30.734+08:00
 * Generated source version: 2.4.6
 * 
 */
@WebServiceClient(name = "ZWQ_DR_AGP", 
                  wsdlLocation = "file:/D:/Avnet/Workspace/workspace_webquote2_truck/WQ_EJB_Quote/ejbModule/drms_agp_rea.wsdl",
                  targetNamespace = "urn:sap-com:document:sap:soap:functions:mc-style") 
public class ZWQDRAGP_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("urn:sap-com:document:sap:soap:functions:mc-style", "ZWQ_DR_AGP");
    public final static QName ZWQDRAGPSOAP12 = new QName("urn:sap-com:document:sap:soap:functions:mc-style", "ZWQ_DR_AGP_SOAP12");
    public final static QName ZWQDRAGP = new QName("urn:sap-com:document:sap:soap:functions:mc-style", "ZWQ_DR_AGP");
    static {
        URL url = null;
        try {
            url = new URL("file:/D:/Avnet/Workspace/workspace_webquote2_truck/WQ_EJB_Quote/ejbModule/drms_agp_rea.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ZWQDRAGP_Service.class.getName())
                .log(java.util.logging.Level.WARNING, 
                     "Can not initialize the default wsdl from {0}", "file:/D:/Avnet/Workspace/workspace_webquote2_truck/WQ_EJB_Quote/ejbModule/drms_agp_rea.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ZWQDRAGP_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ZWQDRAGP_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ZWQDRAGP_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ZWQDRAGP_Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ZWQDRAGP_Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ZWQDRAGP_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns ZWQDRAGP
     */
    @WebEndpoint(name = "ZWQ_DR_AGP_SOAP12")
    public ZWQDRAGP getZWQDRAGPSOAP12() {
        return super.getPort(ZWQDRAGPSOAP12, ZWQDRAGP.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ZWQDRAGP
     */
    @WebEndpoint(name = "ZWQ_DR_AGP_SOAP12")
    public ZWQDRAGP getZWQDRAGPSOAP12(WebServiceFeature... features) {
        return super.getPort(ZWQDRAGPSOAP12, ZWQDRAGP.class, features);
    }
    /**
     *
     * @return
     *     returns ZWQDRAGP
     */
    @WebEndpoint(name = "ZWQ_DR_AGP")
    public ZWQDRAGP getZWQDRAGP() {
        return super.getPort(ZWQDRAGP, ZWQDRAGP.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ZWQDRAGP
     */
    @WebEndpoint(name = "ZWQ_DR_AGP")
    public ZWQDRAGP getZWQDRAGP(WebServiceFeature... features) {
        return super.getPort(ZWQDRAGP, ZWQDRAGP.class, features);
    }

}
