package com.avnet.emasia.webquote.component.show.config;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import java.util.concurrent.ConcurrentHashMap;
import java.util.stream.Collectors;

import com.avnet.emasia.webquote.entity.User;

public class ComponetConfigHelper {
	private static volatile Map<String, List<ComponentShowConfig_d>> CONFIGMAP = getMap();
	private static final String SPECIALSTR = "&$";

	public static synchronized void refresh() {
		CONFIGMAP = getMap();
	}

	private static Map<String, List<ComponentShowConfig_d>> getMap() {
		List<ComponentShowConfig_d> list = getConfigsOderByPriority();
		return list.stream().collect(Collectors.groupingBy(c -> c.getPageName().toUpperCase() + SPECIALSTR + c.getComponetId().toUpperCase()));
	}

	private static synchronized List<ComponentShowConfig_d> getConfigsOderByPriority() {
		// TODO
		List<ComponentShowConfig_d> list = new ArrayList<ComponentShowConfig_d>();
		list.sort(Comparator.comparing(c -> c.getPriority()));// can do it in
																// cache
		return list;
	}

	public static boolean show(String pageName, String componentID, User user) {
		if(pageName == null || componentID==null || user==null) return true;
		List<ComponentShowConfig_d> list = getFromMap(pageName, componentID);
		if(list.isEmpty()) return true;
		Optional<ComponentShowConfig_d> result = list.stream().filter(c -> c.isRoleOrRegionMatch(user))
				.findFirst();
		return result.isPresent() ? result.get().isShow() : true;
	}

	public static boolean show(String pageName, String componentID, String region, String role) {
		if(pageName == null || componentID==null) return true;
		List<ComponentShowConfig_d> list = getFromMap(pageName, componentID);
		if(list.isEmpty()) return true;
		Optional<ComponentShowConfig_d> result = list.stream().filter(c -> c.isRoleOrRegionMatch(region, role))
				.findFirst();
		return result.isPresent() ? result.get().isShow() : true;
	}
	
	private static List<ComponentShowConfig_d> getFromMap(String pageName, String componentID) {
		//if(pageName == null || componentID==null) return null;
		 List<ComponentShowConfig_d> list = CONFIGMAP.get(pageName.toUpperCase() + SPECIALSTR + componentID.toUpperCase());
		 if(list == null) {
			 list = Collections.EMPTY_LIST;
		 } else {
			 list.sort(Comparator.comparing(c -> c.getPriority()));
		 }
		 return list;
	}
}
