package com.avnet.emasia.webquote.masterData.dao.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.annotation.PostConstruct;
import javax.annotation.Resource;
import javax.ejb.Asynchronous;
import javax.ejb.EJB;
import javax.ejb.Remote;
import javax.ejb.Stateless;
import javax.ejb.Timer;
import javax.ejb.TransactionManagement;
import javax.ejb.TransactionManagementType;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;
import javax.persistence.TypedQuery;
import javax.transaction.HeuristicMixedException;
import javax.transaction.HeuristicRollbackException;
import javax.transaction.NotSupportedException;
import javax.transaction.RollbackException;
import javax.transaction.SystemException;
import javax.transaction.UserTransaction;

import org.jboss.ejb3.annotation.TransactionTimeout;

import com.avnet.emasia.webquote.entity.DataSyncError;
import com.avnet.emasia.webquote.entity.MaterialRegional;

import com.avnet.emasia.webquote.exception.CommonConstants;
import com.avnet.emasia.webquote.masterData.util.StringUtils;

import com.avnet.emasia.webquote.masterData.dao.MaterialRegionalDAO;
import com.avnet.emasia.webquote.masterData.dto.Config;
import com.avnet.emasia.webquote.masterData.dto.FileContext;
import com.avnet.emasia.webquote.masterData.ejb.DataSyncErrorSB;
import com.avnet.emasia.webquote.masterData.ejb.MasterDataSB;

import com.avnet.emasia.webquote.masterData.ejb.ScheduleConfigSB;
import com.avnet.emasia.webquote.masterData.ejb.StandardJob;
import com.avnet.emasia.webquote.masterData.ejb.remote.PosRemote;
import com.avnet.emasia.webquote.masterData.exception.CheckedException;
import com.avnet.emasia.webquote.masterData.util.Constants;
import com.avnet.emasia.webquote.masterData.util.FunctionUtils;
import com.avnet.emasia.webquote.masterData.util.ResourceLoader;
import com.avnet.emasia.webquote.quote.ejb.PosSB;
import com.avnet.emasia.webquote.utilities.DateUtils;
import com.avnet.emasia.webquote.utilities.MessageFormatorUtil;


@Stateless
@TransactionManagement(TransactionManagementType.BEAN)
public class MaterialRegionalDAOImpl implements MaterialRegionalDAO {
	@Resource
	UserTransaction ut;

	@PersistenceContext(unitName = "Server_Source")
	private EntityManager em;

	@EJB
	private DataSyncErrorSB errorSB;

	
	private static Logger logger = Logger.getLogger(MasterDataSB.class.getName());

	private final static int SESSION_TIME_OUT = 36000;
	private final static String MATERIAL_TYPE_NORMAL = "NORMAL";


	@Override
	public void batchStartUpdate() throws IllegalStateException, SecurityException, SystemException {
		// TODO Auto-generated method stub
		logger.info("MaterialRegionalDAOImpl.batchStartUpdate: Begin");
		try {
			ut.setTransactionTimeout(SESSION_TIME_OUT);
			ut.begin();
			
	    	Query q1 = em.createQuery("UPDATE MaterialRegional v set v.batchStatus = v.batchStatus + 10 where v.batchStatus < 10 AND v.material.sapPartNumber != null");

			q1.executeUpdate();
	    	em.flush();
        	em.clear();
			ut.commit();				
		} catch (Exception ex){
			ex.printStackTrace();
			//logger.log(Level.SEVERE, "batchStartUpdate", ex);
			
	    	//em.flush();
        	//em.clear();
        	ut.rollback();
        	/*try {
        		ut.commit();
        	} catch (Exception e){
        		LOG.log(Level.SEVERE, "update ActiveSession logout time failed!");
        	}			*/
		}

		logger.info("MaterialRegionalDAOImpl.batchStartUpdate: End");
	}

	@Override
	public void batchEndUpdate() throws IllegalStateException, SecurityException, SystemException {
		// TODO Auto-generated method stub
		logger.info("MaterialRegionalDAOImpl.batchEndUpdate: Begin");

		try {
			ut.setTransactionTimeout(SESSION_TIME_OUT);
			ut.begin();
	    	Query q1 = em.createQuery("UPDATE MaterialRegional v set v.batchStatus = v.batchStatus + 10 where v.batchStatus >= 10 AND v.batchStatus < 20");
			q1.executeUpdate();
	    	em.flush();
        	em.clear();
			ut.commit();				
		} catch (Exception ex){
			ex.printStackTrace();
			//logger.log(Level.SEVERE, "batchStartUpdate", ex);
			
	    	//em.flush();
        	//em.clear();
			ut.rollback();
			
        	/*try {
        		ut.commit();
        	} catch (Exception e){
        		LOG.log(Level.SEVERE, "update ActiveSession logout time failed!");
        	}			*/
		}

		logger.info("MaterialRegionalDAOImpl.batchEndUpdate: End");
		
	}

	public List<MaterialRegional> getProcessingData() {
		logger.info("MaterialRegionalDAOImpl.getProcessingData: Begin");
		List<MaterialRegional> mrLst = null;
		
		//ut.setTransactionTimeout(SESSION_TIME_OUT);
		//ut.begin();
		TypedQuery<MaterialRegional> queryMr = em
				.createQuery("SELECT a FROM MaterialRegional a where a.batchStatus >= 10 AND a.batchStatus < 20", MaterialRegional.class);
		//.createQuery("SELECT a FROM MaterialRegional a where a.batchStatus >= 10 AND a.batchStatus < 20", MaterialRegional.class);
		mrLst = queryMr.getResultList();

		logger.info("MaterialRegionalDAOImpl.getProcessingData: End");
		return mrLst;			
	}
}
