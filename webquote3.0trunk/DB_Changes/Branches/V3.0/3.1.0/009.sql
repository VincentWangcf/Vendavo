--if exists(select * from user_tables where table_name = 'COST_INDICATOR2') drop table COST_INDICATOR2

create table  COST_INDICATOR2 as  
select t.name,
t.status,
t.DESCRIPTION,
 MOQ ,
 MPQ,
 MOV ,
 LEAD_TIME,
 MPQ_VALUE,
MOQ_VALUE ,
MOV_VALUE ,
PRICE_VALIDITY ,
SHIPMENT_VALIDITY ,
PART_DESCRIPTION,
PRICE_LIST_REMARKS
 from COST_INDICATOR t 
 left join COST_INDICATOR_RULE t2 on t.name = t2.COST_INDICATOR ;



 ALTER TABLE COST_INDICATOR RENAME TO COST_INDICATOR_OLD;

 ALTER TABLE COST_INDICATOR2 RENAME TO COST_INDICATOR;

 ALTER TABLE COST_INDICATOR ADD CONSTRAINT COST_INDICATOR_PKEY1 PRIMARY KEY(NAME);

 UPDATE COST_INDICATOR SET MOQ = 3 WHERE LEAD_TIME IS NULL; 
 UPDATE COST_INDICATOR SET MPQ = 3 WHERE LEAD_TIME IS NULL; 
 UPDATE COST_INDICATOR SET MOV = 3 WHERE LEAD_TIME IS NULL; 
 UPDATE COST_INDICATOR SET LEAD_TIME = 3 WHERE LEAD_TIME IS NULL; 
 ALTER TABLE COST_INDICATOR MODIFY MOQ NOT NULL;
 ALTER TABLE COST_INDICATOR MODIFY MPQ NOT NULL;
 ALTER TABLE COST_INDICATOR MODIFY MOV NOT NULL;
 ALTER TABLE COST_INDICATOR MODIFY LEAD_TIME NOT NULL;

 ALTER TABLE PRICER ADD CONSTRAINT PRICER_COST_INDICATOR_FK1 FOREIGN KEY (COST_INDICATOR) REFERENCES COST_INDICATOR(NAME);

UPDATE PRICER SET VERSION=1 where VERSION IS NULL;--(merge need)

ALTER TABLE QUANTITY_BREAK_PRICE DROP CONSTRAINT QUANTITY_BREAK_PRICE_MATE_FK1;--break the foregin key

ALTER TABLE QUANTITY_BREAK_PRICE ADD CONSTRAINT QUANTITY_BREAK_PRICE_FK1 FOREIGN KEY (MATERIAL_DETAIL_ID) REFERENCES PRICER(ID);--REBUILD
