package com.avnet.emasia.webquote.entity;

import java.io.Serializable;
import java.lang.reflect.InvocationTargetException;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;

import org.apache.commons.beanutils.BeanUtils;
import org.apache.commons.lang.StringUtils;
import org.eclipse.persistence.annotations.Customizer;

import com.avnet.emasia.webquote.vo.PricerInfo;

@Entity
@Table(name="QUOTE_ITEM")
@Customizer(com.avnet.emasia.webquote.entity.QuoteItemCustomizer.class)
//@EntityListeners(QuoteItemListener.class)
public class QuoteItem implements Serializable {
	private static final long serialVersionUID = 1L;
	
	private static final Logger LOGGER = Logger.getLogger(QuoteItem.class.getName());

	@Transient
	public String mpqStr;
	@Transient
	public String moqStr;
	@Transient
	public String movStr;	
	@Transient
	public String resaleMarginStr;
	@Transient
	public String quotedPriceStr;
	@Transient
	public String costStr;
	@Transient
	public String quotedQtyStr;
	@Transient
	public String vendorQuoteQtyStr;
	@Transient
	public String priceValidityStr;
	@Transient
	public String shipmentValidityStr;
	@Transient
	public String cancellationWindowStr;
	@Transient
	public String rescheduleWindowStr;
	@Transient
	public DecimalFormat df2 = new DecimalFormat("#");
	@Transient
	public DecimalFormat df5 = new DecimalFormat("#");
	@Transient
	public SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");		
	@Transient
	public String quotationEffectiveDateStr;
	
	static Logger logger = Logger.getLogger("QuoteItem");
	@Id
	@SequenceGenerator(name="QUOTE_ITEM_ID_GENERATOR", sequenceName="WQ_SEQ",allocationSize=1)
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator="QUOTE_ITEM_ID_GENERATOR")
	@Column(name="ID", unique=true, nullable=false)
	private long id;

	@Column(name="QUOTE_NUMBER")
	private String quoteNumber;

	@Column(name="ALTERNATIVE_QUOTE_NUMBER")
	private String alternativeQuoteNumber;

	//uni-directional many-to-one association to Customer
	@ManyToOne
	@JoinColumn(name="END_CUSTOMER_NUMBER")
	private Customer endCustomer;

	//uni-directional many-to-one association to Customer
	@ManyToOne
	@JoinColumn(name="SHIP_TO_CUSTOMER_NUMBER")
	private Customer shipToCustomer;

	//uni-directional many-to-one association to Customer
	@ManyToOne
	@JoinColumn(name="SOLD_TO_CUSTOMER_NUMBER")
	private Customer soldToCustomer;

	// Delinkage change on Oct 29 , 2013 by Tonmy
//	@ManyToOne(fetch=FetchType.EAGER)
//	@JoinColumn(name="REQUESTED_MATERIAL_ID")
//	private Material requestedMaterial;
	

	@ManyToOne
	@JoinColumn(name="QUOTED_MATERIAL_ID")
	private Material quotedMaterial;

	@Column(name="APPLICATION", length=255)
	private String application;

	@Column(name="AQCC", length=1024)
	private String aqcc;

	@Column(name="DESCRIPTION", length=1024)
	private String description;

	@Column(name="PROJECT_NAME", length=255)
	private String projectName;

	@Column(name="INTERNAL_TRANSFER_COMMENT", length=1024)
	private String internalTransferComment;

	@Column(name="BOTTOM_PRICE")
	private Double bottomPrice;

	@Column(name="MIN_SELL_PRICE")
	private Double minSellPrice;

	@Column(name="PRICE_LIST_REMARKS_1", length=255)
	private String priceListRemarks1;

	@Column(name="PRICE_LIST_REMARKS_2", length=255)
	private String priceListRemarks2;

	@Column(name="PRICE_LIST_REMARKS_3", length=255)
	private String priceListRemarks3;

	@Column(name="PRICE_LIST_REMARKS_4", length=255)
	private String priceListRemarks4;

	@Column(name="PRICE_VALIDITY", length=20)	
	private String priceValidity;

	@Column(name="RESALE_MARGIN", length=1024)
	private Double resaleMargin;

	@Column(name="TARGET_MARGIN", length=1024)
	private Double targetMargin;

	@Column(name="REFERENCE_MARGIN", length=1024)
	private Double referenceMargin;	

	@Column(name="ALLOCATION_FLAG", length=1)
	private Boolean allocationFlag;

	@Column(name="BMT_CHECKED_FLAG", length=1)
	private Boolean bmtCheckedFlag;

	@Column(name="VALID_FLAG", length=1)
	private Boolean validFlag;

	@Column(name="BOM_NUMBER", length=20)
	private String bomNumber;

	@Column(name="BOM_REMARKS", length=255)
	private String bomRemarks;

	@Column(name="CANCELLATION_WINDOW")
	private Integer cancellationWindow;

	@Column(name="COMPETITOR_INFORMATION", length=255)
	private String competitorInformation;

	@Column(precision=10, scale=5)
	private Double cost;

	@Column(name="COST_INDICATOR", length=20)
	private String costIndicator;

	@Column(name="DRMS_NUMBER", precision=7)
	private Long drmsNumber;

	@Column(name="EAU")
	private Integer eau;

	@Column(name="ENQUIRY_SEGMENT", length=50)
	private String enquirySegment;

	@Column(name="FIRST_RFQ_CODE", length=20)
	private String firstRfqCode;

	@Column(name="INTERNAL_COMMENT", length=255)
	private String internalComment;

	@Column(name="ITEM_SEQ")
	private Integer itemSeq;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="LAST_PM_UPDATED_ON")
	private Date lastPmUpdatedOn;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="LAST_QC_UPDATED_ON")
	private Date lastQcUpdatedOn;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="LAST_UPDATED_ON")
	private Date lastUpdatedOn;

	@Column(name = "LAST_UPDATED_PM", length = 10)
	private String lastUpdatedPm;

	@Column(name = "LAST_UPDATED_QC", length = 10)
	private String lastUpdatedQc;

	@Column(name="LEAD_TIME", length=30)
	private String leadTime;

	@Column(name="DESIGN_LOCATION", length=255)
	private String designLocation;

	@Column(name="LOA_FLAG", length=1)
	private Boolean loaFlag;


	private Integer moq;

	private Integer mov;


	@Column(name="MP_SCHEDULE")
	private String mpSchedule;

	private Integer mpq;

	@Column(name="MULTI_USAGE_FLAG", length=1)
	private Boolean multiUsageFlag;

	private String pmoq;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="PO_EXPIRY_DATE")
	private Date poExpiryDate;

//	private String warning;

	@Column(name="PP_SCHEDULE")
	private String ppSchedule;

	@Column(name="QC_COMMENT", length=255)
	private String qcComment;

	@Column(name="QTY_INDICATOR", length=20)
	private String qtyIndicator;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="QUOTE_EXPIRY_DATE")
	private Date quoteExpiryDate;

	@Column(name="QUOTED_QTY")
	private Integer quotedQty;

//	@Column(name="QUOTED_FLAG", length=1)
//	private Boolean quotedFlag;

	@Column(name="QUOTED_PRICE", precision=9, scale=5)
	private Double quotedPrice;

	@Column(name="REQUESTED_QTY")
	private Integer requestedQty;

	@Column(name="RESALE_INDICATOR", length=4)
	private String resaleIndicator;

	@Column(name="RESALE_MAX", precision=10, scale=5)
	private Double resaleMax;

	@Column(name="RESALE_MIN", precision=10, scale=5)
	private Double resaleMin;

	@Column(name="RESCHEDULE_WINDOW")
	private Integer rescheduleWindow;

	@Column(name="REVERT_VERSION", length=5)
	private String revertVersion;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="SHIPMENT_VALIDITY")
	private Date shipmentValidity;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="LAST_IT_UPDATE_TIME")
	private Date lastItUpdateTime;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="LAST_RIT_UPDATE_TIME")
	private Date lastRitUpdateTime;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="LAST_SQ_UPDATE_TIME")
	private Date lastSqUpdateTime;

	@Column(name="SPR_FLAG", length=1)
	private Boolean sprFlag;

	@Column(length=10)
	private String status;

	@Column(length=10)
	private String stage;	

	@Column(name="SUPPLIER_DR_NUMBER", length=50)
	private String supplierDrNumber;

	@Column(name="TARGET_RESALE", precision=9, scale=5)
	private Double targetResale;

	@Column(name="TERMS_AND_CONDITIONS", length=255)
	private String termsAndConditions;

	@Column(name="VENDOR_DEBIT_NUMBER", length=50)
	private String vendorDebitNumber;

	@Column(name="VENDOR_QUOTE_NUMBER", length=50)
	private String vendorQuoteNumber;

	@Version
	@Column(name="\"VERSION\"")
	private Integer version;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="SENT_OUT_TIME")
	private Date sentOutTime;

	@Column(name="REASON_FOR_REFRESH")
	private String reasonForRefresh;

	@Column(name="REMARKS")
	private String remarks;

	@Column(name="END_CUSTOMER_NAME")
	private String endCustomerName;

	@Column(name="SHIP_TO_CUSTOMER_NAME")
	private String shipToCustomerName;

	@Column(name="CUSTOMER_TYPE")
	private String customerType;

	@Column(name = "MATERIAL_TYPE_ID", length = 20)
	private String materialTypeId;
	
	@Column(name = "PROGRAM_TYPE", length = 20)
	private String programType;

	@ManyToOne
	@JoinColumn(name="PRODUCT_GROUP2_ID")
	private ProductGroup productGroup2;

	@ManyToOne
	@JoinColumn(name="PRODUCT_GROUP1_ID")
	private ProductGroup productGroup1;	

	@Column(name="PRODUCT_GROUP3")
	private String productGroup3;

	@Column(name="PRODUCT_GROUP4")
	private String productGroup4;

	//bi-directional many-to-one association to Attachment
	@OneToMany(mappedBy="quoteItem", cascade=CascadeType.ALL)
	private List<Attachment> attachments;

	@Column(name = "LAST_UPDATED_BY", length = 10)
	private String lastUpdatedBy;


	@Column(name="VENDOR_QUOTE_QTY")
	private Integer vendorQuoteQty;

	@Column(name="FINAL_QUOTATION_PRICE")
	private Double finalQuotationPrice;
	
	@Column(name="SALES_COST_FLAG")
	private boolean salesCostFlag;
	
	@Column(name="SALES_COST_TYPE")
	@Enumerated(EnumType.STRING)
	private SalesCostType salesCostType;
	
	@Column(name="SALES_COST")
	private BigDecimal salesCost;

	@Column(name="SUGGESTED_RESALE")
	private BigDecimal suggestedResale;

	@Column(name="CUSTOMER_GROUP_ID")
	private String customerGroupId;

	
	//bi-directional many-to-one association to Quote
	@ManyToOne
	@JoinColumn(name="QUOTE_ID")
	private Quote quote;
	
	@Column(name="MIGRATION_BATCH_NUMBER")
	private String migrationBatchNumber;	

	@Transient
	private boolean error;

	@Transient
	private boolean hiddenWR;

	@Transient
	private boolean hightlighted;

	// Delinkage change on Oct 29 , 2013 by Tonmy
	@ManyToOne(fetch=FetchType.EAGER)
	@JoinColumn(name="REQUESTED_MFR_ID")
	private Manufacturer requestedMfr;

	@Column(name="REQUESTED_PART_NUMBER")
	private String requestedPartNumber;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="SUBMISSION_DATE")
	private Date submissionDate;
	
	@Column(name="CURR_FROM", unique=true, nullable=false, length=20)
	private String currFrom;

	@Column(name="CURR_TO", unique=true, nullable=false, length=20)
	private String currTo;

	@Column(name="EX_RATE_FROM")
	private BigDecimal exRateFrom;

	@Column(name="EX_RATE_TO")
	private BigDecimal exRateTo;
	
	@Column(name="VAT")
	private BigDecimal vat;

	@Column(name="HANDLING")
	private BigDecimal handling;
	
	
	// Delinkage change on Oct 29 , 2013 by Tonmy
	@ManyToOne(fetch=FetchType.EAGER)
	@JoinColumn(name="QUOTED_MFR_ID")
	private Manufacturer quotedMfr;

	@Column(name="QUOTED_PART_NUMBER")
	private String quotedPartNumber;
	
	@Transient
	private Material requestedMaterialForProgram;
	
	@Transient
	private ProgramPricer requestedProgramMaterialForProgram;
	
	@Transient
	private Material requestedMaterialForSubmit;
	
	@Transient
	private List<String> pmEmployeeList;
	
	@Transient
	private boolean drmsUpdated;;
	
	@Transient
	private String drmsUpdateFailedDesc;
	
	@Column(name = "LAST_UPDATED_PM_NAME", length = 40)
	private String lastUpdatedPmName;
	
	@Column(name = "LAST_UPDATED_QC_NAME", length = 40)
	private String lastUpdatedQcName;
	
	@Column(name = "LAST_UPDATED_NAME", length = 40)
	private String lastUpdatedName;
	
	@Column(name = "USED_FLAG", precision = 22, scale = 0)
	private Boolean usedFlag;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "QUOTATION_EFFECTIVE_DATE")
	private Date quotationEffectiveDate;
	
	@Column(name = "DESIGN_IN_CAT", length = 20)
	private String designInCat;
	
	@Column(name = "QUOTE_TYPE", length = 20)
	private String quoteType;
	
	@Column(name="SAP_PART_NUMBER", length=36)
	private String sapPartNumber;
	
	@OneToOne(mappedBy="quoteItem", cascade=CascadeType.ALL)
	private QuoteItemDesign quoteItemDesign;

	@OneToMany(mappedBy="quoteItem", cascade=CascadeType.ALL)
	private List<QuoteResponseTimeHistory> quoteResponseTimeHistorys;
	
	@Column(name = "DESIGN_REGION")
	private String designRegion;
	
	
	@Column(name = "DP_REFERENCE_LINE_ID")
	private String dpReferenceLineId;
	
	@Column(name = "ACTION")
	private String action;
	
	@Transient
	private String bmtDescCode;
	
	@Transient
	private String dupMatchCode;
	
	@Transient
	private String reSubmitType;
	
	public static final int ATTACHMENT_TYPE_LENGTH = 5;
	
	/**
	 * add by Lenon,Yang(2016.03.22)
	 * 
	 * the value for the column attachmentFlag like '00010'(1 means has attachment,0 means no)
	 * and from left to right represents the value for all type of attachments below:
	 * 
	 * 1.BMT_ATTACHMENT
	 * 2.QC_ATTACHMENT
	 * 3.PM_ATTACHMENT
	 * 4.REFRESH_ATTACHMENT
	 * 5.ITEM_ATTACHMENT
	 * 
	 */
	@Column(name="ATTACHMENT_FLAG")
	private String attachmentFlag = "00000";	
	
	public List<String> getPmEmployeeList()
	{
		return pmEmployeeList;
	}
	@Transient
	public void setPmEmployeeList(List<String> pmEmployeeList)
	{
		this.pmEmployeeList = pmEmployeeList;
	}
	public boolean isHightlighted() {
		return hightlighted;
	}
	@Transient
	public void setHightlighted(boolean hightlighted) {
		this.hightlighted = hightlighted;
	}
	public boolean isHiddenWR() {
		return hiddenWR;
	}
	@Transient
	public void setHiddenWR(boolean hiddenWR) {
		this.hiddenWR = hiddenWR;
	}
	public boolean isError() {
		return error;
	}
	@Transient
	public void setError(boolean error) {
		this.error = error;
	}
	
	@Column(name="AUTH_GP")
	private Double authGp;		

	@Column(name="AUTH_GP_REASON_CODE")
	private String authGpReasonCode;		

	@Column(name="AUTH_GP_REASON_DESC")
	private String authGpReasonDesc;		

	@Column(name="AUTH_GP_REMARK")
	private String authGpRemark;		

	@Temporal(TemporalType.DATE)
	@Column(name="DR_EXPIRY_DATE")
	private Date drExpiryDate;		

	@Column(name="DR_NEDA_LINE_NUMBER")
	private Integer drNedaLineNumber;		

	@Column(name="DR_NEDA_ID")
	private Integer drNedaId;		

	@Column(name="ORIGINAL_AUTH_GP")
	private Double orginalAuthGp;
	
	@Column(name = "FIS_YEAR", length = 4)
	private String fisYear;
	@Column(name = "FIS_QTR", length = 6)
	private String fisQtr;
	@Column(name = "FIS_MTH", length = 6)
	private String fisMth;
	
	@Column(name="LAST_UPDATED_BMT")
	private String lastUpdatedBmt;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_QC_IN_DATE")
	private Date lastQcInDate;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_QC_OUT_DATE")
	private Date lastQcOutDate;

	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_SQ_IN_DATE")
	private Date lastSqInDate;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_SQ_OUT_DATE")
	private Date lastSqOutDate;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_BMT_IN_DATE")
	private Date lastBmtInDate;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_BMT_OUT_DATE")
	private Date lastBmtOutDate;
	
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_BMT_UPDATE_TIME")
	private Date lastBmtUpdateTime;	
		

	@Transient
	public boolean isITStatus;
	
	public boolean isITStatus()
	{
		return isITStatus;
	}
	@Transient
	public void setITStatus(boolean isITStatus)
	{
		this.isITStatus = isITStatus;
	}
	
	public QuoteItem() {
		df2.setMaximumFractionDigits(2);
		df2.setMinimumFractionDigits(2);
		df2.setMinimumIntegerDigits(1);
		df5.setMaximumFractionDigits(5);
		df5.setMinimumFractionDigits(5);
		df5.setMinimumIntegerDigits(1);
		//this.attachmentFlag = "00000";
	}

	public long getId() {
		return id;
	}

	public void setId(long id) {
		this.id = id;
	}

	public String getQuoteNumber() {
		return quoteNumber;
	}

	public void setQuoteNumber(String quoteNumber) {
		this.quoteNumber = quoteNumber;
	}

	public Customer getEndCustomer() {
		return endCustomer;
	}

	public void setEndCustomer(Customer endCustomer) {
		this.endCustomer = endCustomer;
	}

	public Customer getShipToCustomer() {
		return shipToCustomer;
	}

	public void setShipToCustomer(Customer shipToCustomer) {
		this.shipToCustomer = shipToCustomer;
	}

	public Customer getSoldToCustomer() {
		return soldToCustomer;
	}

	public void setSoldToCustomer(Customer soldToCustomer) {
		this.soldToCustomer = soldToCustomer;
	}

	// Delinkage change on Oct 29 , 2013 by Tonmy
//	public Material getRequestedMaterial() {
//		return requestedMaterial;
//	}
//
//	public void setRequestedMaterial(Material requestedMaterial) {
//		this.requestedMaterial = requestedMaterial;
//	}

	public Material getQuotedMaterial() {
		return quotedMaterial;
	}

	public void setQuotedMaterial(Material quotedMaterial) {
		this.quotedMaterial = quotedMaterial;
	}

	public String getApplication() {
		return application;
	}

	public void setApplication(String application) {
		this.application = application;
	}

	public String getAqcc() {
		return aqcc;
	}

	public void setAqcc(String aqcc) {
		this.aqcc = aqcc;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

//	public Boolean getNewCustomerFlag() {
//		return newCustomerFlag;
//	}
//
//	public void setNewCustomerFlag(Boolean newCustomerFlag) {
//		this.newCustomerFlag = newCustomerFlag;
//	}

	public String getProjectName() {
		return projectName;
	}

	public void setProjectName(String projectName) {
		this.projectName = projectName;
	}

	public String getInternalTransferComment() {
		return internalTransferComment;
	}

	public void setInternalTransferComment(String internalTransferComment) {
		this.internalTransferComment = internalTransferComment;
	}

	public Double getBottomPrice() {
		return bottomPrice;
	}

	public void setBottomPrice(Double minSellPrice) {
		this.bottomPrice = minSellPrice;
	}

	public Double getMinSellPrice() {
		return minSellPrice;
	}

	public void setMinSellPrice(Double normSellPrice) {
		this.minSellPrice = normSellPrice;
	}

	public String getPriceListRemarks1() {
		return priceListRemarks1;
	}

	public void setPriceListRemarks1(String priceListRemarks1) {
		this.priceListRemarks1 = priceListRemarks1;
	}

	public String getPriceListRemarks2() {
		return priceListRemarks2;
	}

	public void setPriceListRemarks2(String priceListRemarks2) {
		this.priceListRemarks2 = priceListRemarks2;
	}

	public String getPriceListRemarks3() {
		return priceListRemarks3;
	}

	public void setPriceListRemarks3(String priceListRemarks3) {
		this.priceListRemarks3 = priceListRemarks3;
	}

	public String getPriceListRemarks4() {
		return priceListRemarks4;
	}

	public void setPriceListRemarks4(String priceListRemarks4) {
		this.priceListRemarks4 = priceListRemarks4;
	}

	public String getPriceValidity() {
		return priceValidity;
	}

	public void setPriceValidity(String priceValidity) {
		this.priceValidity = priceValidity;
	}

	public Double getResaleMargin() {
		return this.resaleMargin;
	}

	public Double getTargetMargin() {
		return this.targetMargin;
	}

	public Boolean getAllocationFlag() {
		return allocationFlag;
	}

	public void setAllocationFlag(Boolean allocationFlag) {
		this.allocationFlag = allocationFlag;
	}

	public Boolean getBmtCheckedFlag() {
		return bmtCheckedFlag;
	}

	public void setBmtCheckedFlag(Boolean bmtCheckedFlag) {
		this.bmtCheckedFlag = bmtCheckedFlag;
	}

	public String getBomNumber() {
		return bomNumber;
	}

	public void setBomNumber(String bomNumber) {
		this.bomNumber = bomNumber;
	}

	public String getBomRemarks() {
		return bomRemarks;
	}

	public void setBomRemarks(String bomRemarks) {
		this.bomRemarks = bomRemarks;
	}

	public String getCompetitorInformation() {
		return competitorInformation;
	}

	public void setCompetitorInformation(String competitorInformation) {
		this.competitorInformation = competitorInformation;
	}

	public Double getCost() {
		/*
		if(this.cost != null && this.cost == 0.0)
			return null;
		 */
		return cost;
	}

	public void setCost(Double cost) {
		this.cost = cost;
	}

	public String getCostIndicator() {
		return costIndicator;
	}

	public void setCostIndicator(String costIndicator) {
		this.costIndicator = costIndicator;
	}

	public Integer getEau() {
		return eau;
	}

	public void setEau(Integer eau) {
		this.eau = eau;
	}

	public String getEnquirySegment() {
		return enquirySegment;
	}

	public void setEnquirySegment(String enquirySegment) {
		this.enquirySegment = enquirySegment;
	}

	public String getFirstRfqCode() {
		return firstRfqCode;
	}

	public void setFirstRfqCode(String firstRfqCode) {
		this.firstRfqCode = firstRfqCode;
	}

	public String getInternalComment() {
		return internalComment;
	}

	public void setInternalComment(String internalComment) {
		this.internalComment = internalComment;
	}

	public Integer getItemSeq() {
		return itemSeq;
	}

	public void setItemSeq(Integer itemSeq) {
		this.itemSeq = itemSeq;
	}

	public Date getLastPmUpdatedOn() {
		return lastPmUpdatedOn;
	}

	public void setLastPmUpdatedOn(Date lastPmUpdatedOn) {
		this.lastPmUpdatedOn = lastPmUpdatedOn;
	}

	public Date getLastQcUpdatedOn() {
		return lastQcUpdatedOn;
	}

	public void setLastQcUpdatedOn(Date lastQcUpdatedOn) {
		this.lastQcUpdatedOn = lastQcUpdatedOn;
	}

	public Date getLastUpdatedOn() {
		return lastUpdatedOn;
	}

	public void setLastUpdatedOn(Date lastUpdatedOn) {
		this.lastUpdatedOn = lastUpdatedOn;
	}



	public String getLeadTime() {
		return leadTime;
	}

	public void setLeadTime(String leadTime) {
		this.leadTime = leadTime;
	}

	public String getDesignLocation() {
		return designLocation;
	}

	public void setDesignLocation(String designLocation) {
		this.designLocation = designLocation;
	}

	public Boolean getLoaFlag() {
		return loaFlag;
	}

	public void setLoaFlag(Boolean loaFlag) {
		this.loaFlag = loaFlag;
	}

	public Integer getMpq() {
		return mpq;
	}

	public void setMpq(Integer mpq) {
		this.mpq = mpq;
	}
 
	public Integer getMoq() {
		return moq;
	}

	public void setMoq(Integer moq) {	
		this.moq = moq;
	}

	public Integer getMov() {
		return mov;
	}

	public void setMov(Integer mov) {	
		this.mov = mov;
	}

	public String getMpSchedule() {
		return mpSchedule;
	}

	public void setMpSchedule(String mpSchedule) {
		this.mpSchedule = mpSchedule;
	}

	public Boolean getMultiUsageFlag() {
		return multiUsageFlag;
	} 

	public void setMultiUsageFlag(Boolean multiUsageFlag) {
		this.multiUsageFlag = multiUsageFlag;
	}

	public String getPmoq() {
		return pmoq;
	}  

	public void setPmoq(String pmoq) {
		this.pmoq = pmoq;
	}

	public Date getPoExpiryDate() {
		return poExpiryDate;
	}

	public void setPoExpiryDate(Date poExpiryDate) {
		this.poExpiryDate = poExpiryDate;
	}

	public String getPpSchedule() {
		return ppSchedule;
	}

	public void setPpSchedule(String ppSchedule) {
		this.ppSchedule = ppSchedule;
	}

	public String getQcComment() {
		return qcComment;
	}

	public void setQcComment(String qcComment) {
		this.qcComment = qcComment;
	}

	public String getQtyIndicator() {
		return qtyIndicator;
	}

	public void setQtyIndicator(String qtyIndicator) {
		this.qtyIndicator = qtyIndicator;
	}

	public Date getQuoteExpiryDate() {
		return quoteExpiryDate;
	}

	public void setQuoteExpiryDate(Date quoteExpiryDate) {
		this.quoteExpiryDate = quoteExpiryDate;
	}

	public Integer getQuotedQty() {
		if(this.quotedQty != null && this.quotedQty == 0)
			return null;
		return quotedQty;
	}

	public void setQuotedQty(Integer quotedQty) {
		this.quotedQty = quotedQty;
	}

//	public Boolean getQuotedFlag() {
//		return quotedFlag;
//	}
//
//	public void setQuotedFlag(Boolean quotedFlag) {
//		this.quotedFlag = quotedFlag;
//	}

	public Double getQuotedPrice() {
		return quotedPrice;
	}

	public void setQuotedPrice(Double quotedPrice) {
		this.quotedPrice = quotedPrice;
	}

	public Integer getRequestedQty() {
		return requestedQty;
	}

	public void setRequestedQty(Integer requestedQty) {
		this.requestedQty = requestedQty;
	}

	public String getResaleIndicator() {
		return resaleIndicator;
	}

	public void setResaleIndicator(String resaleIndicator) {
		this.resaleIndicator = resaleIndicator;
	}

	public Double getResaleMax() {
		return resaleMax;
	}

	public void setResaleMax(Double resaleMax) {
		this.resaleMax = resaleMax;
	}

	public Double getResaleMin() {
		return resaleMin;
	}

	public void setResaleMin(Double resaleMin) {
		this.resaleMin = resaleMin;
	}

	public Integer getCancellationWindow() {
		return cancellationWindow;
	}

	public void setCancellationWindow(Integer cancellationWindow) {
		this.cancellationWindow = cancellationWindow;
	}

	public Integer getRescheduleWindow() {
		return rescheduleWindow;
	}

	public void setRescheduleWindow(Integer rescheduleWindow) {
		this.rescheduleWindow = rescheduleWindow;
	}

	public String getRevertVersion() {
		return revertVersion;
	}

	public void setRevertVersion(String revertVersion) {
		this.revertVersion = revertVersion;
	}

	public Date getShipmentValidity() {
		return shipmentValidity;
	}

	public void setShipmentValidity(Date shipmentValidity) {
		this.shipmentValidity = shipmentValidity;
	}

	public Boolean getSprFlag() {
		return sprFlag;
	}

	public void setSprFlag(Boolean sprFlag) {
		this.sprFlag = sprFlag;
	}

	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	public String getSupplierDrNumber() {
		return supplierDrNumber;
	}

	public void setSupplierDrNumber(String supplierDrNumber) {
		this.supplierDrNumber = supplierDrNumber;
	}

	public Double getTargetResale() {
		return targetResale;
	}

	public void setTargetResale(Double targetResale) {
		this.targetResale = targetResale;
	}

	public String getTermsAndConditions() {
		return termsAndConditions;
	}

	public void setTermsAndConditions(String termsAndConditions) {
		this.termsAndConditions = termsAndConditions;
	}

	/**
	 * MFR Debit#
	 * @return
	 */
	public String getVendorDebitNumber() {
		return vendorDebitNumber;
	}

	public void setVendorDebitNumber(String vendorDebitNumber) {
		this.vendorDebitNumber = vendorDebitNumber;
	}

        /**
         * MFR Quote#
         * @return 
         */
	public String getVendorQuoteNumber() {
		return vendorQuoteNumber;
	}

	public void setVendorQuoteNumber(String vendorQuoteNumber) {
		this.vendorQuoteNumber = vendorQuoteNumber;
	}

	public Integer getVersion() {
		return version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	public Date getSentOutTime() {
		return sentOutTime;
	}

	public void setSentOutTime(Date sentOutTime) {
		this.sentOutTime = sentOutTime;
	}

	public String getReasonForRefresh() {
		return reasonForRefresh;
	}

	public void setReasonForRefresh(String reasonForRefresh) {
		this.reasonForRefresh = reasonForRefresh;
	}

	public List<Attachment> getAttachments() {
		return attachments;
	}

	public void setAttachments(List<Attachment> attachments) {
		this.attachments = attachments;
	}

	public Quote getQuote() {
		return quote;
	}

	public void setQuote(Quote quote) {
		this.quote = quote;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	public String getRemarks() {
		return remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}

	public String getCustomerType() {
		return customerType;
	}

	public void setCustomerType(String customerType) {
		this.customerType = customerType;
	}

	public String getMaterialTypeId()
	{
		return materialTypeId;
	}
	public void setMaterialTypeId(String materialTypeId)
	{
		this.materialTypeId = materialTypeId;
	}

	
	public String getProgramType()
	{
		return programType;
	}
	public void setProgramType(String programType)
	{
		this.programType = programType;
	}
	public ProductGroup getProductGroup2() {
		return productGroup2;
	}

	public void setProductGroup2(ProductGroup productGroup2) {
		this.productGroup2 = productGroup2;
	}

	public Long getDrmsNumber() {
		return drmsNumber;
	}

	public void setDrmsNumber(Long drmsNumber) {
		this.drmsNumber = drmsNumber;
	}

	public String getStage() {
		return stage;
	}

	public void setStage(String stage) {
		this.stage = stage;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((getAttachments() == null) ? 0 : getAttachments().hashCode());
		result = prime * result + ((moq == null) ? 0 : moq.hashCode());
		result = prime * result + ((mpq == null) ? 0 : mpq.hashCode());
		// Delinkage change on Oct 29 , 2013 by Tonmy
//		result = prime
//				* result
//				+ ((requestedMaterial == null) ? 0 : requestedMaterial
//						.hashCode());
		result = prime * result
				+ ((requestedMfr == null) ? 0 : requestedMfr.hashCode());
		result = prime * result
				+ ((requestedPartNumber == null) ? 0 : requestedPartNumber.hashCode());
		
		
		result = prime * result
				+ ((requestedQty == null) ? 0 : requestedQty.hashCode());
		result = prime * result
				+ ((targetResale == null) ? 0 : targetResale.hashCode());
		return result;
	}



	public Integer getVendorQuoteQty() {
		return vendorQuoteQty;
	}

	public void setVendorQuoteQty(Integer vendorQuoteQty) {
		this.vendorQuoteQty = vendorQuoteQty;
	}

	@Override
	public String toString() {
		StringBuffer sb = new StringBuffer();
		sb.append("QuoteItem [")
		.append(" quoteNumber=").append(quoteNumber)
		.append(" version=").append(version)
		.append(" id=").append(id)
		.append(" mpq=").append(mpq)
		.append(" moq=").append(moq);
		// Delinkage change on Oct 29 , 2013 by Tonmy
//		if(requestedMaterial != null)
//			sb.append(" requestedMaterial=").append(requestedMaterial.getId());
//		else
//			sb.append(" requestedMaterial=").append(invalidPartNumber);		
		
		sb.append(" requestedMfr=").append(requestedMfr);
		sb.append(" requestedPartNumber=").append(requestedPartNumber);
		sb.append(" requestedQty=").append(requestedQty)
		.append(" targetResale=").append(targetResale)
		.append(" remarks=").append(remarks);
		//		if(attachments!=null)
		//		sb.append(" attachments size =").append(attachments.size());	
		sb.append(" ]");
		return sb.toString();
	}

//	public String getWarning() {
//		return warning;
//	}
//	public void setWarning(String warning) {
//		//logger.log(Level.INFO, "setWarning= " + warning);
//		this.warning = warning;
//	}
	public Double getFinalQuotationPrice() {
		return finalQuotationPrice;
	}
	public void setFinalQuotationPrice(Double finalQuotationPrice) {
		this.finalQuotationPrice = finalQuotationPrice;
	}
	public Boolean getValidFlag() {
		return validFlag;
	}
	public void setValidFlag(Boolean validFlag) {
		this.validFlag = validFlag;
	}
	public String getEndCustomerName() {
		return endCustomerName;
	}
	public void setEndCustomerName(String endCustomerName) {
		this.endCustomerName = endCustomerName;
	}
	public String getShipToCustomerName() {
		return shipToCustomerName;
	}
	public void setShipToCustomerName(String shipToCustomerName) {
		this.shipToCustomerName = shipToCustomerName;
	}
//	public String getInvalidPartNumber() {
//		return invalidPartNumber;
//	}
//	public void setInvalidPartNumber(String invalidPartNumber) {
//		this.invalidPartNumber = invalidPartNumber;
//	}
//	public String getInvalidMfr() {
//		return invalidMfr;
//	}
//	public void setInvalidMfr(String invalidMfr) {
//		this.invalidMfr = invalidMfr;
//	}
	public ProductGroup getProductGroup1() {
		return productGroup1;
	}
	public void setProductGroup1(ProductGroup productGroup1) {
		this.productGroup1 = productGroup1;
	}
	public String getProductGroup3() {
		return productGroup3;
	}
	public void setProductGroup3(String productGroup3) {
		this.productGroup3 = productGroup3;
	}
	public String getProductGroup4() {
		return productGroup4;
	}
	public void setProductGroup4(String productGroup4) {
		this.productGroup4 = productGroup4;
	}
	public Double getReferenceMargin() {
		return referenceMargin;
	}
	public void setReferenceMargin(Double referenceMargin) {
		this.referenceMargin = referenceMargin;
	}

	public List<Attachment> getAttachments(String type){
		List<Attachment> outcome = new ArrayList<>();				
		if(this.getAttachments() != null && this.getAttachments().size() > 0){
			for(Attachment attach : getAttachments()){
				if(attach != null && attach.getType().equals(type)){
					outcome.add(attach);
				}
			}
		}
		return outcome;
	}

	public String getAlternativeQuoteNumber() {
		return alternativeQuoteNumber;
	}
	public void setAlternativeQuoteNumber(String alternativeQuoteNumber) {
		this.alternativeQuoteNumber = alternativeQuoteNumber;
	}
	// Delinkage change on Oct 29 , 2013 by Tonmy
//	public List<QuantityBreakPrice> getQuantityBreakPrices(){
//		List<QuantityBreakPrice> quantityBreakPrices = null;
//		if(this.requestedMaterial != null && this.materialType != null && this.materialType.getName() != null && this.materialType.getName().equals("PROGRAM")){
//			quantityBreakPrices = new ArrayList<QuantityBreakPrice>();
//			ProgramMaterial programMaterial = requestedMaterial.getProgramMaterial();
//			if(programMaterial != null){
//				//logger.log(Level.INFO, "Program Material is found for " + requestedMaterial.getFullMfrPartNumber());
//				quantityBreakPrices = programMaterial.getQuantityBreakPrices();
//				if(quantityBreakPrices == null){
//					quantityBreakPrices = new ArrayList<QuantityBreakPrice>();
//				}
//			}
//		}
//		return quantityBreakPrices;
//	}

//	public QuantityBreakPrice getQuantityBreakPrice0(){
//		int index = 0;
//		List<QuantityBreakPrice> quantityBreakPrices = getQuantityBreakPrices();
//		if(quantityBreakPrices != null && quantityBreakPrices.size() > index)
//			return quantityBreakPrices.get(index);
//		return null;
//	}
//
//	public QuantityBreakPrice getQuantityBreakPrice1(){
//		int index = 1;
//		List<QuantityBreakPrice> quantityBreakPrices = getQuantityBreakPrices();
//		if(quantityBreakPrices != null && quantityBreakPrices.size() > index)
//			return quantityBreakPrices.get(index);
//		return null;
//	}
//
//	public QuantityBreakPrice getQuantityBreakPrice2(){
//		int index = 2;
//		List<QuantityBreakPrice> quantityBreakPrices = getQuantityBreakPrices();
//		if(quantityBreakPrices != null && quantityBreakPrices.size() > index)
//			return quantityBreakPrices.get(index);
//		return null;
//	}
//
//	public QuantityBreakPrice getQuantityBreakPrice3(){
//		int index = 3;
//		List<QuantityBreakPrice> quantityBreakPrices = getQuantityBreakPrices();
//		if(quantityBreakPrices != null && quantityBreakPrices.size() > index)
//			return quantityBreakPrices.get(index);
//		return null;
//	}
//
//	public QuantityBreakPrice getQuantityBreakPrice4(){
//		int index = 4;
//		List<QuantityBreakPrice> quantityBreakPrices = getQuantityBreakPrices();
//		if(quantityBreakPrices != null && quantityBreakPrices.size() > index)
//			return quantityBreakPrices.get(index);
//		return null;
//	}
//
//	public QuantityBreakPrice getQuantityBreakPrice5(){
//		int index = 5;
//		List<QuantityBreakPrice> quantityBreakPrices = getQuantityBreakPrices();
//		if(quantityBreakPrices != null && quantityBreakPrices.size() > index)
//			return quantityBreakPrices.get(index);
//		return null;
//	}
//
//	public QuantityBreakPrice getQuantityBreakPrice6(){
//		int index = 6;
//		List<QuantityBreakPrice> quantityBreakPrices = getQuantityBreakPrices();
//		if(quantityBreakPrices != null && quantityBreakPrices.size() > index)
//			return quantityBreakPrices.get(index);
//		return null;
//	}
//
//	public QuantityBreakPrice getQuantityBreakPrice7(){
//		int index = 7;
//		List<QuantityBreakPrice> quantityBreakPrices = getQuantityBreakPrices();
//		if(quantityBreakPrices != null && quantityBreakPrices.size() > index)
//			return quantityBreakPrices.get(index);
//		return null;
//	}
//
//	public QuantityBreakPrice getQuantityBreakPrice8(){
//		int index = 8;
//		List<QuantityBreakPrice> quantityBreakPrices = getQuantityBreakPrices();
//		if(quantityBreakPrices != null && quantityBreakPrices.size() > index)
//			return quantityBreakPrices.get(index);
//		return null;
//	}
//
//	public QuantityBreakPrice getQuantityBreakPrice9(){
//		int index = 9;
//		List<QuantityBreakPrice> quantityBreakPrices = getQuantityBreakPrices();
//		if(quantityBreakPrices != null && quantityBreakPrices.size() > index)
//			return quantityBreakPrices.get(index);
//		return null;
//	}

	public String getMultiUsageFlagStr() {
		if(this.multiUsageFlag != null && this.multiUsageFlag)
			return "Yes";
		else
			return "No";
	}

	public String getAllocationFlagStr() {
		if(this.allocationFlag != null && this.allocationFlag)
			return "Yes";
		else
			return "No";
	}

	public String getSprFlagStr(){
		if(this.sprFlag != null && this.sprFlag)
			return "Yes";
		else
			return "No";		
	}

	public String getBmtCheckedFlagStr(){
		if(this.bmtCheckedFlag != null && this.bmtCheckedFlag)
			return "Yes";
		else
			return "No";		
	}


	public String getLoaFlagStr() {
		if(this.loaFlag != null && this.loaFlag)
			return "Yes";
		else
			return "No";
	}	

	public String getValidFlagStr() {
		if(this.validFlag != null && this.validFlag)
			return "Yes";
		else
			return "No";
	}	

	public String getSoldToCustomerFullName(){
		if(this.soldToCustomer != null){
			String customerName = soldToCustomer.getCustomerFullName();
			return customerName;
		}
		return null;	
	}

	public String getEndCustomerFullName(){
		if(this.endCustomer != null){
			String customerName = endCustomer.getCustomerFullName();
			return customerName;
		}
		return this.endCustomerName;
	}	

	public String getShipToCustomerFullName(){
		if(this.shipToCustomer != null){
			String customerName = shipToCustomer.getCustomerFullName();
			return customerName;
		}
		return this.shipToCustomerName;
	}	

	public String getResaleMarginStr() {
		if(this.resaleMarginStr == null){
			if(getQuotedPrice() != null && getCost() != null){
				try {
					this.resaleMargin = 100*(this.quotedPrice - this.cost)/this.quotedPrice;
					this.resaleMarginStr = df2.format(this.resaleMargin) + "%";
					return resaleMarginStr;
				} catch (Exception ex){
					logger.log(Level.SEVERE, "exception in creating margin string"+ex.getMessage(), ex);
					this.resaleMarginStr = null;
				}
			}
		}
		return this.resaleMarginStr;
	}

	public String getTargetMarginStr() {
		this.targetMargin = getTargetMargin();
		if(this.targetMargin != null){
			return df2.format(this.targetMargin)+"%";			
		}
		return null;
	}

	public void setMultiUsageFlagStr(String value) {
		if(value != null && value.equals("Yes")){
			setMultiUsageFlag(true);
		} else {
			setMultiUsageFlag(false);
		}
	}

	public void setAllocationFlagStr(String value) {	
		if(value != null && value.equals("Yes")){
			setAllocationFlag(true);
		} else {
			setAllocationFlag(false);
		}
	}

	public void setSprFlagStr(String value){
		if(value != null && value.equals("Yes")){
			setSprFlag(true);
		} else {
			setSprFlag(false);
		}	
	}

	public void setBmtCheckedFlagStr(String value){
		if(value != null && value.equals("Yes")){
			setBmtCheckedFlag(true);
		} else {
			setBmtCheckedFlag(false);
		}				
	}


	public void setLoaFlagStr(String value) {
		if(value != null && value.equals("Yes")){
			setLoaFlag(true);
		} else {
			setLoaFlag(false);
		}	
	}	

	public void setValidFlagStr(String value) {
		if(value != null && value.equals("Yes")){
			setValidFlag(true);
		} else {
			setValidFlag(false);
		}	
	}	

	public void setSoldToCustomerFullName(String value){

	}

	public void setEndCustomerFullName(String value){

	}	

	public void setShipToCustomerFullName(String value){

	}	

	public void setResaleMarginStr(String value) {
		this.resaleMarginStr = value;
	}

	public void setTargetMarginStr(String value) {
	   
	}	

	public void setResaleMargin(Double value) {
		this.resaleMargin = value;
	}

	public String getPoExpiryDateStr(){
		SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
		if(this.poExpiryDate != null){
			return sdf.format(this.poExpiryDate);
		} else {
			return null;
		}
	}

	public String getQuoteExpiryDateStr(){
		SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
		if(this.quoteExpiryDate != null){
			return sdf.format(this.quoteExpiryDate);
		} else {
			return null;
		}
	}

	public int getPendingDay(){
		Date date = submissionDate;
		return getPendingDay(date);
	}
	private int getPendingDay(Date date) {
		Calendar cal = Calendar.getInstance();
		cal.setTime(date);
		cal.set(Calendar.HOUR_OF_DAY, 0);
		cal.set(Calendar.MINUTE, 0);
		cal.set(Calendar.SECOND, 0);
		cal.set(Calendar.MILLISECOND, 0);
		Calendar today = Calendar.getInstance();
		today.set(Calendar.HOUR_OF_DAY, 0);
		today.set(Calendar.MINUTE, 0);
		today.set(Calendar.SECOND, 0);
		today.set(Calendar.MILLISECOND, 0);
		if(cal.after(today) || cal.equals(today)){
			return 0;
		}
		int diff = 0;
		if(cal.get(Calendar.DAY_OF_WEEK) == Calendar.SATURDAY || cal.get(Calendar.DAY_OF_WEEK) == Calendar.SUNDAY){
			diff--;
		}
		do{
			cal.add(Calendar.DAY_OF_MONTH, 1);
			if(cal.get(Calendar.DAY_OF_WEEK) != Calendar.SATURDAY && cal.get(Calendar.DAY_OF_WEEK) != Calendar.SUNDAY){
				diff++;
			}
		}while(! cal.equals(today));
		return diff < 0 ? 0 : diff;
	}

	public int getPendingDayForIT(){
		Date date = getLastItUpdateTime();
		if(date!=null)
		{
			return getPendingDay(date);
		}
		else
		{
			return -1; //represents getLastItUpdateTime in db table is null
		}
	}

	// Delinkage change on Oct 29 , 2013 by Tonmy
//	public String getCalRequestedMaterial(){
//		if(requestedMaterial != null){
//			return requestedMaterial.getFullMfrPartNumber();
//		}
//
//		if(requestedMaterial == null && stage != null && stage.equals("DRAFT")){
//			return invalidPartNumber;
//		}
//
//		return null;
//
//	}
//
//	public String getCalRequestedMfr(){
//		if(requestedMaterial != null){
//			return requestedMaterial.getManufacturer().getName();
//		}
//
//		if(requestedMaterial == null && stage != null && stage.equals("DRAFT")){
//			return invalidMfr;
//		}
//
//		return null;
//
//	}

	public static Comparator<QuoteItem> alternativeQuoteNumberComparator = new Comparator<QuoteItem>() {

		public int compare(QuoteItem quoteItem1, QuoteItem quoteItem2) {

			if(quoteItem1.getAlternativeQuoteNumber() == null)
				return 1;
			if(quoteItem2.getAlternativeQuoteNumber() == null)
				return -1;

			//ascending order
			return quoteItem1.getAlternativeQuoteNumber().compareTo(quoteItem2.getAlternativeQuoteNumber());

			//descending order
			//return quoteItem2.getAlternativeQuoteNumber().compareTo(quoteItem1.getAlternativeQuoteNumber());
		}

	};

	public boolean hasDifferentValue(String val, String oldValue, String newValid){
		if(oldValue == null && newValid == null){
			return false;
		} else if((oldValue == null && newValid != null) || (oldValue != null && newValid == null)){
			//logger.log(Level.INFO, val + " : " + oldValue + " => " + newValid);
			return true;
		} else {
			if(oldValue.equals(newValid)){
				return false;
			} else {
				//logger.log(Level.INFO, val + " : " + oldValue + " => " + newValid);
				return true;
			}
		}
	}

	public boolean hasDifferentValue(String val, Integer oldValue, Integer newValid){
		if(oldValue == null && newValid == null){
			return false;
		} else if((oldValue == null && newValid != null) || (oldValue != null && newValid == null)){
			//logger.log(Level.INFO, val + " : " + oldValue + " => " + newValid);
			return true;
		} else {
			if(oldValue == newValid){
				return false;
			} else {
				//logger.log(Level.INFO, val + " : " + oldValue + " => " + newValid);
				return true;
			}
		}
	}

	public boolean hasDifferentValue(String val, Double oldValue, Double newValid){
		if(oldValue == null && newValid == null){
			return false;
		} else if((oldValue == null && newValid != null) || (oldValue != null && newValid == null)){
			//logger.log(Level.INFO, val + " : " + oldValue + " => " + newValid);
			return true;
		} else {
			if(oldValue == newValid){
				return false;
			} else {
				//logger.log(Level.INFO, val + " : " + oldValue + " => " + newValid);
				return true;
			}
		}
	}	

	public boolean hasDifferentValue(String val, Boolean oldValue, Boolean newValid){
		if(oldValue == null && newValid == null){
			return false;
		} else if((oldValue == null && newValid != null) || (oldValue != null && newValid == null)){
			//logger.log(Level.INFO, val + " : " + oldValue + " => " + newValid);
			return true;
		} else {
			if((oldValue && newValid) || (!oldValue && !newValid)){
				return false;
			} else {
				//logger.log(Level.INFO, val + " : " + oldValue + " => " + newValid);
				return true;
			}
		}
	}

	public boolean hasDifferentValue(String val, Date oldValue, Date newValid){
		if(oldValue == null && newValid == null){
			return false;
		} else if(((oldValue == null && newValid != null)) || (oldValue != null && newValid == null)){
			//logger.log(Level.INFO, val + " : " + oldValue + " => " + newValid);
			return true;
		} else {
			if(oldValue.getTime() == newValid.getTime()){
				return false;
			} else {
				//logger.log(Level.INFO, val + " : " + oldValue + " => " + newValid);
				return true;
			}
		}
	}

	public boolean hasDifferentValue(String val, Material oldValue, Material newValid){
		if(oldValue == null && newValid == null){
			return false;
		}else if(((oldValue == null && newValid != null)) || (oldValue != null && newValid == null)){
			//logger.log(Level.INFO, val + " : " + oldValue + " => " + newValid);
			return true;
		} else {
			if(oldValue.getId() == newValid.getId()){
				return false;
			} else {
				//logger.log(Level.INFO, val + " : " + oldValue + " => " + newValid);
				return true;
			}
		}
	}


	public static boolean isEmpty(String value) {
		return (value == null || value != null && value.trim().length() == 0);
	}


	public String getMpqStr() {
		if(mpqStr == null){
			this.mpqStr = (mpq==null?null:String.valueOf(mpq));
		}
		return mpqStr;
	}
	public void setMpqStr(String mpqStr) {
		//if(hasDifferentValue("mpqStr", this.mpqStr, mpqStr)) setWarning(NOT_NULL);
		if(!isEmpty(mpqStr)){
		try {
			this.mpq = (Integer.parseInt(mpqStr));
		} catch (Exception ex){				
			logger.log(Level.WARNING, "Exception in parsing to integer"+mpqStr+" , Exception Message : "+ex.getMessage(), ex);
		}}
		this.mpqStr= mpqStr;
	}
	public String getMoqStr() {
		if(moqStr == null){
			this.moqStr = (moq==null?null:String.valueOf(moq));
		}		
		return moqStr;
	}
	public void setMoqStr(String moqStr) {
		//if(hasDifferentValue("moqStr", this.moqStr, moqStr)) setWarning(NOT_NULL);
		if(!isEmpty(moqStr)){
		try {
			this.moq = (Integer.parseInt(moqStr));
		} catch (Exception ex){				
			logger.log(Level.WARNING, "Exception in parsing to integer"+moqStr+" , Exception Message : "+ex.getMessage(), ex);
		}
		}
		this.moqStr = moqStr;
	}
	public String getMovStr() {
		if(movStr == null){
			this.movStr = (mov==null?null:String.valueOf(mov));
		}				
		return movStr;
	}
	public void setMovStr(String movStr) {
//		if(hasDifferentValue("movStr", this.movStr, movStr)) setWarning(NOT_NULL);
		if(!isEmpty(movStr)){
		try {
			this.mov = (Integer.parseInt(movStr));
		} catch (Exception ex){				
			logger.log(Level.WARNING, "Exception in parsing to integer"+movStr+" , Exception Message : "+ex.getMessage(), ex);
		}		
		}
		this.movStr = movStr;
	}
	public String getQuotedPriceStr() {
		if(quotedPriceStr == null){
			this.quotedPriceStr = (quotedPrice==null?null:df5.format(quotedPrice));
		}
		return quotedPriceStr;
	}
	public void setQuotedPriceStr(String quotedPriceStr) {
//		if(hasDifferentValue("quotedPriceStr", this.quotedPriceStr, quotedPriceStr)) setWarning(NOT_NULL);
		try {
			this.quotedPrice = (Double.parseDouble(quotedPriceStr));
		} catch (Exception ex){				
			logger.log(Level.WARNING, "Exception in parsing to integer"+quotedPriceStr+" , Exception Message : "+ex.getMessage(), ex);
		}		
		this.quotedPriceStr = quotedPriceStr;
	}
	public String getCostStr() {
		if(costStr == null){
			this.costStr = (cost==null?null:df5.format(cost));
		}
		return costStr;
	}
	public void setCostStr(String costStr) {
//		if(hasDifferentValue("costStr", this.costStr, costStr)) setWarning(NOT_NULL);
		try {
			this.cost = (Double.parseDouble(costStr));
		} catch (Exception ex){				
			logger.log(Level.WARNING, "Exception in parsing to integer"+costStr+" , Exception Message : "+ex.getMessage(), ex);
		}			
		this.costStr = costStr;
	}
	public String getQuotedQtyStr() {
		if(quotedQtyStr == null){
			this.quotedQtyStr = (quotedQty==null?null:String.valueOf(quotedQty));
		}
		return quotedQtyStr;
	}
	public void setQuotedQtyStr(String quotedQtyStr) {
//		if(hasDifferentValue("quotedQtyStr", this.quotedQtyStr, quotedQtyStr)) setWarning(NOT_NULL);
		if(!isEmpty(quotedQtyStr)){
		try {
			this.quotedQty = Integer.parseInt(quotedQtyStr);
		} catch (Exception ex){				
			logger.log(Level.WARNING, "Exception in parsing to integer"+quotedQtyStr+" , Exception Message : "+ex.getMessage(), ex);
		}		
		}
		this.quotedQtyStr = quotedQtyStr;
	}
	public String getVendorQuoteQtyStr() {
		if(vendorQuoteQtyStr == null){
			this.vendorQuoteQtyStr = (vendorQuoteQty==null?null:String.valueOf(vendorQuoteQty));
		}
		return vendorQuoteQtyStr;
	}
	public void setVendorQuoteQtyStr(String vendorQuoteQtyStr) {
//		if(hasDifferentValue("vendorQuoteQtyStr", this.vendorQuoteQtyStr, vendorQuoteQtyStr)) setWarning(NOT_NULL);
		if(!isEmpty(vendorQuoteQtyStr)){
		try {
			this.vendorQuoteQty = (Integer.parseInt(vendorQuoteQtyStr));
		} catch (Exception ex){				
			logger.log(Level.WARNING, "Exception in parsing to integer"+vendorQuoteQtyStr+" , Exception Message : "+ex.getMessage(), ex);
		}			
		}
		this.vendorQuoteQtyStr = vendorQuoteQtyStr;
	}
	public String getPriceValidityStr() {
		if(priceValidityStr == null){
			this.priceValidityStr = (priceValidity==null?null:String.valueOf(priceValidity));
		}
		return priceValidityStr;
	}
	public void setPriceValidityStr(String priceValidityStr) {
//		if(hasDifferentValue("priceValidityStr", this.priceValidityStr, priceValidityStr)) setWarning(NOT_NULL);	
		this.priceValidityStr = priceValidityStr;
	}	
	public String getShipmentValidityStr() {
		if(shipmentValidityStr == null){
			this.shipmentValidityStr = (shipmentValidity==null?null:sdf.format(shipmentValidity));
		}
		return shipmentValidityStr;
	}
	public void setShipmentValidityStr(String shipmentValidityStr) {
//		if(hasDifferentValue("shipmentValidityStr", this.shipmentValidityStr, shipmentValidityStr)) setWarning(NOT_NULL);	
		this.shipmentValidityStr = shipmentValidityStr;
	}
	
	public String getQuotationEffectiveDateStr() {
		if(quotationEffectiveDateStr == null){
			this.quotationEffectiveDateStr = (quotationEffectiveDate==null?null:sdf.format(quotationEffectiveDate));
		}
		return quotationEffectiveDateStr;
	}
	public void setQuotationEffectiveDateStr(String quotationEffectiveDateStr) {
		this.quotationEffectiveDateStr = quotationEffectiveDateStr;
	}
	
	public String getCancellationWindowStr() {
		if(cancellationWindowStr == null){
			this.cancellationWindowStr = (cancellationWindow==null?null:String.valueOf(cancellationWindow));
		}
		return cancellationWindowStr;
	}
	public void setCancellationWindowStr(String cancellationWindowStr) {
//		if(hasDifferentValue("cancellationWindowStr", this.cancellationWindowStr, cancellationWindowStr)) setWarning(NOT_NULL);
		if(!isEmpty(cancellationWindowStr)){
		try {
			this.cancellationWindow = (Integer.parseInt(cancellationWindowStr));
		} catch (Exception ex){				
			logger.log(Level.WARNING, "Exception in parsing to integer"+cancellationWindowStr+" , Exception Message : "+ex.getMessage(), ex);
		}	
		}
		this.cancellationWindowStr = cancellationWindowStr;
	}
	public String getRescheduleWindowStr() {
		if(rescheduleWindowStr == null){
			this.rescheduleWindowStr = (rescheduleWindow==null?null:String.valueOf(rescheduleWindow));
		}
		return rescheduleWindowStr;
	}
	public void setRescheduleWindowStr(String rescheduleWindowStr) {
//		if(hasDifferentValue("rescheduleWindowStr", this.rescheduleWindowStr, rescheduleWindowStr)) setWarning(NOT_NULL);
		if(!isEmpty(rescheduleWindowStr)){
		try {
			this.rescheduleWindow = (Integer.parseInt(rescheduleWindowStr));
		} catch (Exception ex){				
			logger.log(Level.WARNING, "Exception in parsing to integer"+rescheduleWindowStr+" , Exception Message : "+ex.getMessage(), ex);
		}			
		}
		this.rescheduleWindowStr = rescheduleWindowStr;
	}

	public void setTargetMargin(Double targetMargin) {
		this.targetMargin = targetMargin;
	}	

	public boolean isAttachmentAvailable()
	{
		if(attachments!=null && attachments.size()>0)
		{
			return true;
		}
		else
		{
			return false;
		}
	}
	 
	public Boolean getItemAttachmentFlag() {
		if(StringUtils.isBlank(this.attachmentFlag) || attachmentFlag.length() != ATTACHMENT_TYPE_LENGTH){
            return false;
        }
		return StringUtils.equals(String.valueOf(attachmentFlag.charAt(4)), "1");
	}
	
	
	public Boolean getRefreshAttachmentFlag() {
		if(StringUtils.isBlank(this.attachmentFlag) || attachmentFlag.length() != ATTACHMENT_TYPE_LENGTH){
            return false;
        }
		return StringUtils.equals(String.valueOf(attachmentFlag.charAt(3)), "1");
	}
	
	
	public Boolean getPmAttachmentFlag() {
		if(StringUtils.isBlank(this.attachmentFlag) || attachmentFlag.length() != ATTACHMENT_TYPE_LENGTH){
            return false;
        }
		return StringUtils.equals(String.valueOf(attachmentFlag.charAt(2)), "1");
	}
	
	public Date getLastItUpdateTime() {
		return lastItUpdateTime;
	}
	public void setLastItUpdateTime(Date lastItUpdateTime) {
		this.lastItUpdateTime = lastItUpdateTime;
	}
	public Date getLastRitUpdateTime() {
		return lastRitUpdateTime;
	}
	public void setLastRitUpdateTime(Date lastRitUpdateTime) {
		this.lastRitUpdateTime = lastRitUpdateTime;
	}
	public Date getLastSqUpdateTime() {
		return lastSqUpdateTime;
	}
	public void setLastSqUpdateTime(Date lastSqUpdateTime) {
		this.lastSqUpdateTime = lastSqUpdateTime;
	}
	public Manufacturer getRequestedMfr()
	{
		return requestedMfr;
	}
	public void setRequestedMfr(Manufacturer requestedMfr)
	{
		this.requestedMfr = requestedMfr;
	}
	public String getRequestedPartNumber()
	{
		return requestedPartNumber;
	}
	public void setRequestedPartNumber(String requestedPartNumber)
	{
		this.requestedPartNumber = requestedPartNumber;
	}
	public Material getRequestedMaterialForProgram()
	{
		return requestedMaterialForProgram;
	}
	@Transient
	public void setRequestedMaterialForProgram(Material requestedMaterialForProgram)
	{
		this.requestedMaterialForProgram = requestedMaterialForProgram;
	}
	
	
	public ProgramPricer getRequestedProgramMaterialForProgram() {
		return requestedProgramMaterialForProgram;
	}
	@Transient
	public void setRequestedProgramMaterialForProgram(
			ProgramPricer requestedProgramMaterialForProgram) {
		this.requestedProgramMaterialForProgram = requestedProgramMaterialForProgram;
	}
	
	
	public Material getRequestedMaterialForSubmit()
	{
		return requestedMaterialForSubmit;
	}
	@Transient
	public void setRequestedMaterialForSubmit(Material requestedMaterialForSubmit)
	{
		this.requestedMaterialForSubmit = requestedMaterialForSubmit;
	}

	public String getMigrationBatchNumber() {
		return migrationBatchNumber;
	}
	public void setMigrationBatchNumber(String migrationBatchNumber) {
		this.migrationBatchNumber = migrationBatchNumber;
	}
	public Manufacturer getQuotedMfr() {
		return quotedMfr;
	}
	public void setQuotedMfr(Manufacturer quotedMfr) {
		this.quotedMfr = quotedMfr;
	}
	public String getQuotedPartNumber()
	{
		return quotedPartNumber;
	}
	public void setQuotedPartNumber(String quotedPartNumber)
	{
		this.quotedPartNumber = quotedPartNumber;
	}
	public Double getAuthGp() {
		return authGp;
	}
	public void setAuthGp(Double authGp) {
		this.authGp = authGp;
	}
	public String getAuthGpReasonCode() {
		return authGpReasonCode;
	}
	public void setAuthGpReasonCode(String authGpReasonCode) {
		this.authGpReasonCode = authGpReasonCode;
	}
	public String getAuthGpReasonDesc() {
		return authGpReasonDesc;
	}
	public void setAuthGpReasonDesc(String authGpReasonDesc) {
		this.authGpReasonDesc = authGpReasonDesc;
	}
	public String getAuthGpRemark() {
		return authGpRemark;
	}
	public void setAuthGpRemark(String authGpRemark) {
		this.authGpRemark = authGpRemark;
	}
	public Date getDrExpiryDate() {
		return drExpiryDate;
	}
	public void setDrExpiryDate(Date drExpiryDate) {
		this.drExpiryDate = drExpiryDate;
	}
	public Integer getDrNedaLineNumber() {
		return drNedaLineNumber;
	}
	public void setDrNedaLineNumber(Integer drNedaLineNumber) {
		this.drNedaLineNumber = drNedaLineNumber;
	}
	public Integer getDrNedaId() {
		return drNedaId;
	}
	public void setDrNedaId(Integer drNedaId) {
		this.drNedaId = drNedaId;
	}
	public boolean getDrmsUpdated() {
		return drmsUpdated;
	}
	public void setDrmsUpdated(boolean drmsUpdated) {
		this.drmsUpdated = drmsUpdated;
	}	


	public String getSmpq() {
        if(mpq == null){
               return null;
        }
        return String.valueOf(mpq);
	}

	public void setSmpq(String smpq) {
        if(isEmpty(smpq)){
               mpq = null;
        }
        else
        {
        	try{
        		mpq = Integer.parseInt(smpq);
        	}catch(Exception e){
        		logger.log(Level.WARNING, "Exception in parsing to integer"+smpq+" , Exception Message : "+e.getMessage(), e);
        		mpq = null;
        	}
        }
	}
	
	public String getSmoq() {
        if(moq == null){
               return null;
        }
        return String.valueOf(moq);
	}

	public void setSmoq(String smoq) {
        if(isEmpty(smoq)){
               moq = null;
        }
        else
        {
        	try{
        		moq = Integer.parseInt(smoq);
        	}catch(Exception e){
        		logger.log(Level.WARNING, "Exception in parsing to integer"+smoq+" , Exception Message : "+e.getMessage(), e);
        		moq = null;
        	}
        }
	}
	
	public String getSmov() {
        if(mov == null){
               return null;
        }
        return String.valueOf(mov);
	}

	public void setSmov(String smov) {
        if(isEmpty(smov)){
               mov = null;
        }
        else
        {
        	try{
        		mov = Integer.parseInt(smov);
        	}catch(Exception e){
        		logger.log(Level.WARNING, "Exception in parsing to integer"+smov+" , Exception Message : "+e.getMessage(), e);
        		mov = null;
        	}
        }
	}
	
	public String getSvendorQuoteQty() {
        if(vendorQuoteQty == null){
               return null;
        }
        return String.valueOf(vendorQuoteQty);
	}

	public void setSvendorQuoteQty(String svendorQuoteQty) {
        if(isEmpty(svendorQuoteQty)){
        	vendorQuoteQty = null;
        }
        else
        {
        	try{
        		vendorQuoteQty = Integer.parseInt(svendorQuoteQty);
        	}catch(Exception e){
        		logger.log(Level.WARNING, "Exception in parsing to integer"+svendorQuoteQty+" , Exception Message : "+e.getMessage(), e);
        		vendorQuoteQty = null;
        	}
        }
	}
	
	public String getScancellationWindow() {
        if(cancellationWindow == null){
               return null;
        }
        return String.valueOf(cancellationWindow);
	}

	public void setScancellationWindow(String scancellationWindow) {
        if(isEmpty(scancellationWindow)){
        	cancellationWindow = null;
        }
        else
        {
        	try{
        		cancellationWindow = Integer.parseInt(scancellationWindow);
        	}catch(Exception e){
        		logger.log(Level.WARNING, "Exception in parsing to integer"+scancellationWindow+" , Exception Message : "+e.getMessage(), e);
        		cancellationWindow = null;
        	}
        }
	}
	
	public String getSrescheduleWindow() {
        if(rescheduleWindow == null){
               return null;
        }
        return String.valueOf(rescheduleWindow);
	}

	public void setSrescheduleWindow(String srescheduleWindow) {
        if(isEmpty(srescheduleWindow)){
        	rescheduleWindow = null;
        }
        else
        {
        	try{
        		rescheduleWindow = Integer.parseInt(srescheduleWindow);
        	}catch(Exception e){
        		logger.log(Level.WARNING, "Exception in parsing to integer"+srescheduleWindow+" , Exception Message : "+e.getMessage(), e);
        		rescheduleWindow = null;
        	}
        }
	}
	public String getDrmsUpdateFailedDesc() {
		return drmsUpdateFailedDesc;
	}
	public void setDrmsUpdateFailedDesc(String drmsUpdateFailedDesc) {
		this.drmsUpdateFailedDesc = drmsUpdateFailedDesc;
	}
	public Date getSubmissionDate() {
		return submissionDate;
	}
	public void setSubmissionDate(Date submissionDate) {
		this.submissionDate = submissionDate;
	}
	public String getCurrFrom() {
		return currFrom;
	}
	public void setCurrFrom(String currFrom) {
		this.currFrom = currFrom;
	}
	public String getCurrTo() {
		return currTo;
	}
	public void setCurrTo(String currTo) {
		this.currTo = currTo;
	}
	public BigDecimal getExRateFrom() {
		return exRateFrom;
	}
	public void setExRateFrom(BigDecimal exRateFrom) {
		this.exRateFrom = exRateFrom;
	}
	public BigDecimal getExRateTo() {
		return exRateTo;
	}
	public void setExRateTo(BigDecimal exRateTo) {
		this.exRateTo = exRateTo;
	}
	public BigDecimal getVat() {
		return vat;
	}
	public void setVat(BigDecimal vat) {
		this.vat = vat;
	}
	public BigDecimal getHandling() {
		return handling;
	}
	public void setHandling(BigDecimal handling) {
		this.handling = handling;
	}
	public Double getOrginalAuthGp() {
		return orginalAuthGp;
	}
	public void setOrginalAuthGp(Double orginalAuthGp) {
		this.orginalAuthGp = orginalAuthGp;
	}
	public String getLastUpdatedPm()
	{
		return lastUpdatedPm;
	}
	public void setLastUpdatedPm(String lastUpdatedPm)
	{
		this.lastUpdatedPm = lastUpdatedPm;
	}
	public String getLastUpdatedQc()
	{
		return lastUpdatedQc;
	}
	public void setLastUpdatedQc(String lastUpdatedQc)
	{
		this.lastUpdatedQc = lastUpdatedQc;
	}
	public String getLastUpdatedBy()
	{
		return lastUpdatedBy;
	}
	public void setLastUpdatedBy(String lastUpdatedBy)
	{
		this.lastUpdatedBy = lastUpdatedBy;
	}
	public String getLastUpdatedPmName()
	{
		return lastUpdatedPmName;
	}
	public void setLastUpdatedPmName(String lastUpdatedPmName)
	{
		this.lastUpdatedPmName = lastUpdatedPmName;
	}
	public String getLastUpdatedQcName()
	{
		return lastUpdatedQcName;
	}
	public void setLastUpdatedQcName(String lastUpdatedQcName)
	{
		this.lastUpdatedQcName = lastUpdatedQcName;
	}
	public String getLastUpdatedName()
	{
		return lastUpdatedName;
	}
	public void setLastUpdatedName(String lastUpdatedName)
	{
		this.lastUpdatedName = lastUpdatedName;
	}
	
	
	
	
	public Boolean getUsedFlag()
	{
		return this.usedFlag;
	}

	public void setUsedFlag(Boolean usedFlag)
	{
		this.usedFlag = usedFlag;
	}
	
	

	public Date getQuotationEffectiveDate()
	{
		return this.quotationEffectiveDate;
	}

	public void setQuotationEffectiveDate(Date quotationEffectiveDate)
	{
		this.quotationEffectiveDate = quotationEffectiveDate;
	}
	
	
	
	public String getQuoteType()
	{
		return this.quoteType;
	}

	public void setQuoteType(String quoteType)
	{
		this.quoteType = quoteType;
	}
	public String getDesignInCat()
	{
		return designInCat;
	}
	public void setDesignInCat(String designInCat)
	{
		this.designInCat = designInCat;
	}
	
	

	public String getFisYear()
	{
		return this.fisYear;
	}

	public void setFisYear(String fisYear)
	{
		this.fisYear = fisYear;
	}

	public String getFisQtr()
	{
		return this.fisQtr;
	}

	public void setFisQtr(String fisQtr)
	{
		this.fisQtr = fisQtr;
	}


	public String getFisMth()
	{
		return this.fisMth;
	}

	public void setFisMth(String fisMth)
	{
		this.fisMth = fisMth;
	}	
	
	public String getSapPartNumber() {
		return this.sapPartNumber;
	}

	public void setSapPartNumber(String sapPartNumber) {
		this.sapPartNumber = sapPartNumber;
	}

	public QuoteItemDesign getQuoteItemDesign() {
		return quoteItemDesign;
	}
	
	public void setQuoteItemDesign(QuoteItemDesign quoteItemDesign) {
		this.quoteItemDesign = quoteItemDesign;
	}
	
	public List<QuoteResponseTimeHistory> getQuoteResponseTimeHistorys() {
		return quoteResponseTimeHistorys;
	}
	
	public void setQuoteResponseTimeHistorys(List<QuoteResponseTimeHistory> quoteResponseTimeHistorys) {
		this.quoteResponseTimeHistorys = quoteResponseTimeHistorys;
	}


	public String getDesignRegion() {
		return designRegion;
	}
	
	public void setDesignRegion(String designRegion) {
		this.designRegion = designRegion;
	}
	public String getDpReferenceLineId() {
		return dpReferenceLineId;
	}
	public void setDpReferenceLineId(String dpReferenceLineId) {
		this.dpReferenceLineId = dpReferenceLineId;
	}
	public String getBmtDescCode() {
		return bmtDescCode;
	}
	public void setBmtDescCode(String bmtDescCode) {
		this.bmtDescCode = bmtDescCode;
	}
	public String getDupMatchCode() {
		return dupMatchCode;
	}
	public void setDupMatchCode(String dupMatchCode) {
		this.dupMatchCode = dupMatchCode;
	}	

	public String getLastUpdatedBmt() {
		return lastUpdatedBmt;
	}
	public void setLastUpdatedBmt(String lastUpdatedBmt) {
		this.lastUpdatedBmt = lastUpdatedBmt;
	}
	
	public Date getLastQcInDate() {
		return lastQcInDate;
	}
	public void setLastQcInDate(Date lastQcInDate) {
		this.lastQcInDate = lastQcInDate;
	}
	public Date getLastQcOutDate() {
		return lastQcOutDate;
	}
	public void setLastQcOutDate(Date lastQcOutDate) {
		this.lastQcOutDate = lastQcOutDate;
	}
	public Date getLastSqInDate() {
		return lastSqInDate;
	}
	public void setLastSqInDate(Date lastSqInDate) {
		this.lastSqInDate = lastSqInDate;
	}
	public Date getLastSqOutDate() {
		return lastSqOutDate;
	}
	public void setLastSqOutDate(Date lastSqOutDate) {
		this.lastSqOutDate = lastSqOutDate;
	}
	public Date getLastBmtInDate() {
		return lastBmtInDate;
	}
	public void setLastBmtInDate(Date lastBmtInDate) {
		this.lastBmtInDate = lastBmtInDate;
	}
	public Date getLastBmtOutDate() {
		return lastBmtOutDate;
	}
	public void setLastBmtOutDate(Date lastBmtOutDate) {
		this.lastBmtOutDate = lastBmtOutDate;
	}
	public Date getLastBmtUpdateTime() {
		return lastBmtUpdateTime;
	}
	public void setLastBmtUpdateTime(Date lastBmtUpdateTime) {
		this.lastBmtUpdateTime = lastBmtUpdateTime;
	}
	
	public String getAttachmentFlag() {
		return attachmentFlag;
	}
	
	public void setAttachmentFlag(String attachmentFlag) {
		this.attachmentFlag = attachmentFlag;
	}

	public Boolean getQcAttachmentFlag() {
		if(StringUtils.isBlank(this.attachmentFlag) || attachmentFlag.length() != ATTACHMENT_TYPE_LENGTH){
            return false;
        }
		return StringUtils.equals(String.valueOf(attachmentFlag.charAt(1)), "1");
	}
	
	public Boolean getBmtAttachmentFlag() {
		if(StringUtils.isBlank(this.attachmentFlag) || attachmentFlag.length() != ATTACHMENT_TYPE_LENGTH){
            return false;
        }
		return StringUtils.equals(String.valueOf(attachmentFlag.charAt(0)), "1");
	}
	
	public Boolean getHasAnyAttachment() {
		if(StringUtils.isBlank(this.attachmentFlag) || attachmentFlag.length() != ATTACHMENT_TYPE_LENGTH){
            return false;
        }
		return attachmentFlag.contains("1");
	}
	
	
	public boolean isSalesCostFlag() {
		return salesCostFlag;
	}
	public void setSalesCostFlag(boolean salesCostFlag) {
		this.salesCostFlag = salesCostFlag;
	}
	public SalesCostType getSalesCostType() {
		return salesCostType;
	}
	public void setSalesCostType(SalesCostType salesCostType) {
		this.salesCostType = salesCostType;
	}
	public BigDecimal getSalesCost() {
		return salesCost;
	}
	public void setSalesCost(BigDecimal salesCost) {
		this.salesCost = salesCost;
	}
	public BigDecimal getSuggestedResale() {
		return suggestedResale;
	}
	public void setSuggestedResale(BigDecimal suggestedResale) {
		this.suggestedResale = suggestedResale;
	}
	public String getCustomerGroupId() {
		return customerGroupId;
	}
	public void setCustomerGroupId(String custoemrGroupId) {
		this.customerGroupId = custoemrGroupId;
	}
	public String getAction() {
		return action;
	}
	
	public void setAction(String action) {
		this.action = action;
	}
	public String getReSubmitType() {
		return reSubmitType;
	}
	public void setReSubmitType(String reSubmitType) {
		this.reSubmitType = reSubmitType;
	}
	
	@Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if(obj == null){
            return false;
        }
        if(obj instanceof QuoteItem){
           final QuoteItem o = (QuoteItem)obj;
           return o.getId()==(getId());
        }
        return false;
    }
	
	public void clearPricingInfo() {
		
		setQuotedPrice(null);
		setResaleMargin(null);
		setTargetMargin(null);
		setReferenceMargin(null);
		setQuotedQty(null);
		
		setCost(null);
		setCostIndicator(null);
		setMinSellPrice(null);
		setBottomPrice(null);
		setMpq(null);
		setMoq(null);
		setMov(null);
		setLeadTime(null);
		setPriceValidity(null);
		setShipmentValidity(null);
		setQuotationEffectiveDate(null);
		
		setPriceListRemarks1(null);
		setPriceListRemarks2(null);
		setPriceListRemarks3(null);
		setPriceListRemarks4(null);
		setDescription(null);
		setTermsAndConditions(null);
		
	}
	
	public void clearMfrDetailInfo() {
		setCancellationWindow(null);
		setRescheduleWindow(null);
		setResaleIndicator(null);
		setQtyIndicator(null);
		setMultiUsageFlag(null);
	}
	
	public PricerInfo createPricerInfo() {
		PricerInfo pricerInfo = new PricerInfo();
    	pricerInfo.setMfr(getQuotedMfr().getName());
    	pricerInfo.setFullMfrPartNumber(getQuotedPartNumber());
    	pricerInfo.setBizUnit(getQuote().getBizUnit().getName());
    	pricerInfo.setSoldToCustomer(getQuote().getSoldToCustomer());
    	pricerInfo.setEndCustomer(getEndCustomer());
    	pricerInfo.setSalesId(getQuote().getSales().getId());
    	pricerInfo.setSalesCostFlag(isSalesCostFlag());
    	pricerInfo.setRequestedQty(getRequestedQty());
		return pricerInfo;
	}
	
	public static QuoteItem newInstance(QuoteItem quoteItem) {
		QuoteItem newQuoteItem = new QuoteItem();
		try {
			BeanUtils.copyProperties(newQuoteItem, quoteItem);
		} catch (Exception e) {
			LOGGER.log(Level.SEVERE,"Exception occured when copying quoteItem " + quoteItem.getId() + e.getMessage(),e);
		}
		
		QuoteItemDesign quoteItemDesign = quoteItem.getQuoteItemDesign();
		if(quoteItemDesign != null && quoteItemDesign.getId() != null){

			QuoteItemDesign newQuoteItemDesign = new QuoteItemDesign();
			try {
				BeanUtils.copyProperties(newQuoteItemDesign, quoteItemDesign);
			} catch (Exception e) {
				LOGGER.log(Level.SEVERE,"add part setup bmt data error: " + e.getMessage(),e);
			}
			newQuoteItemDesign.setId(0L);
			newQuoteItemDesign.setQuoteItem(quoteItem);
			newQuoteItemDesign.setVersion(0);
			newQuoteItem.setQuoteItemDesign(newQuoteItemDesign);
		}
		
		
		List<Attachment> newAttachments = new ArrayList<>();
		for (Attachment attachment : quoteItem.getAttachments()) {
			try {
				Attachment newAttachment = new Attachment();
				BeanUtils.copyProperties(newAttachment, attachment);
				newAttachment.setId(0L);
				newAttachment.setQuoteItem(newQuoteItem);
				newAttachments.add(newAttachment);
			} catch (Exception e) {
				LOGGER.log(Level.SEVERE,"Exception occured for attachment: "+attachment.getFileName()+"copying field data error: " + e.getMessage(),e);
			}
		}
		newQuoteItem.setAttachments(newAttachments);
		
		
		List<QuoteResponseTimeHistory> newHistories = new ArrayList<>();
		for (QuoteResponseTimeHistory history : quoteItem.getQuoteResponseTimeHistorys()) {
			try {
				QuoteResponseTimeHistory newHistory = new QuoteResponseTimeHistory();
				BeanUtils.copyProperties(newHistory, history);
				newHistory.setId(0L);
				newHistory.setVersion(0);
				newHistory.setQuoteItem(newQuoteItem);
				newHistories.add(newHistory);
			} catch (Exception e) {
				LOGGER.log(Level.SEVERE,"Exception occured for Quote Response time history ID: "+history.getId().toString()+", copying field data error: " + e.getMessage(),e);
			}
		}
		newQuoteItem.setQuoteResponseTimeHistorys(newHistories);
		
		
		return null;
	}
	
	public void applyNcnrFilter() {
		if (termsAndConditions != null && termsAndConditions.toUpperCase().contains("NCNR")) {
			cancellationWindow = null;
			rescheduleWindow = null;
		}
	}
	
}